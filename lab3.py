# -*- coding: utf-8 -*-
"""Lab3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jfoCXU8XYOHv0hzYg0ugtfxgmrdD2v1e
"""

# Commented out IPython magic to ensure Python compatibility.
import matplotlib.pyplot as plt
# %matplotlib inline

import numpy as np
x = np.linspace(0, 5, 11)
y = x**2

x

y

plt.plot(x, y, 'r') # 'r' is the color red
plt.xlabel('X Axis Title Here')
plt.ylabel('Y Axis Title Here')
plt.title('String Title Here')
plt.show()

plt.subplot(1,2,1) # 'r' is the color red
plt.plot(x,y,'r--')
plt.subplot(1,2,2) # 'r' is the color red
plt.plot(y,x,'g*-');

plt.show()

fig = plt.figure()

axes = fig.add_axes([0.1, 0.1, 0.8, 0.8])

axes.plot(x,y, 'b')
axes.set_xlabel('Set X label')
axes.set_ylabel('Set Y label')
axes.set_title('Set title')

fig = plt.figure()

axes1 = fig.add_axes([0.1, 0.1, 0.8, 0.8])
axes2 = fig.add_axes([0.2, 0.5, 0.4, 0.3])


axes1.plot(x,y, 'b')
axes1.set_xlabel('X_label_axes2')
axes1.set_ylabel('Y_label_axes2')
axes1.set_title('Axes 2 title')

axes2.plot(x,y, 'r')
axes2.set_xlabel('X_label_axes2')
axes2.set_ylabel('Y_label_axes2')
axes2.set_title('Axes 2 title')

fig, axes = plt.subplots()

axes.plot(x,y, 'r')
axes.set_xlabel('x')
axes.set_ylabel('y')
axes.set_title('title')

fig, axes = plt.subplots(nrows=1,ncols=2)

axes

for ax in axes:
    ax.plot(x,y,'b')
    ax.set_xlabel('x')
    ax.set_ylabel('y')
    ax.set_title('title')

fig

fig, axes = plt.subplots(nrows=1,ncols=2)

for ax in axes:
    ax.plot(x,y,'g')
    ax.set_xlabel('x')
    ax.set_ylabel('y')
    ax.set_title('title')

fig
plt.tight_layout()

fig = plt.figure(figsize=(8,4), dpi=100)

fig, axes = plt.subplots(figsize=(12,3))

    axes.plot(x, y, 'r')
    axes.set_xlabel('x')
    axes.set_ylabel('y')
    axes.set_title('title')

fig.savefig("filename.png")

fig.savefig("filename.png", dpi=200)

ax.set_title("title");

ax.set_xlabel("x")
ax.set_ylabel("y")

fig = plt.figure()

ax = fig.add_axes([0,0,1,1])

ax.plot(x, x**2, label="x**2")
ax.plot(x, x**3, label="x**3")
ax.legend()

fig, axes = plt.subplots(1,3,figsize=(12,4))

axes[0].plot(x, x**2,x, x**3)
axes[0].set_title("default axes ranges")

axes[1].plot(x, x**2,x, x**3)
axes[1].axis('tight')
axes[1].set_title("tight axes")

axes[2].plot(x, x**2,x, x**3)
axes[2].set_ylim([0,60])
axes[2].set_xlim([2,5])
axes[2].set_title("custom axes range")

#SEABORN

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.image as mpimg
import seaborn as sns
# %matplotlib inline

sns.get_dataset_names()

tips = sns.load_dataset("tips")
tips.head()

ax = sns.scatterplot(x="total_bill", y="tip", data=tips)

sns.relplot(x="total_bill", y="tip", data=tips, kind="scatter", hue="sex", size="size",)

sns.catplot(x="sex", y="total_bill", data=tips, kind="strip", hue="day",)

sns.catplot(x="sex", y="total_bill", data=tips, kind="strip", hue="day", jitter=False, dodge=True)

sns.catplot(x="sex", y="total_bill", data=tips, kind="box", hue="day",)

#Excercise

# Commented out IPython magic to ensure Python compatibility.
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
# %matplotlib inline
data = pd.read_csv('job-market.csv')
data.dropna(inplace=True)
data

bar1 = data["Location"].value_counts().index
bar2 = data["Classification"].value_counts().index

plt.figure(figsize=(8, 8))
sns.countplot(data=data, y='Classification', order=bar2)
plt.title('Number of Jobs by Classification')
plt.xlabel('Number of Jobs')

plt.figure(figsize=(8, 8))
sns.countplot(data=data, y='Location',order=bar1)
plt.title('Number of Jobs by Location')
plt.xlabel('Number of Location')

data["Salary"]=data["LowestSalary"].astype(str)+" "+data['HighestSalary'].astype(str)

Salary=data['Salary'].value_counts()
plt.pie(Salary,autopct='%1.1f%%')

centre_circle = plt.Circle((0, 0), 0.70, fc='white')
fig = plt.gcf()
 
# Adding Circle in Pie chart
fig.gca().add_artist(centre_circle)
 
# Adding Title of chart
plt.title('Employee Salary Details')
 
# Displaying Chart
plt.show()

Salary=data['Salary'].value_counts()
Salary

#Ex2

import pandas as pd

df = pd.read_csv('wine.data.csv')
print(df)

df = df.drop('Label', axis=1)

titanic_dataset = pd.read_csv('wine.data.csv')
sns.set_theme(style="ticks")
sns.pairplot(titanic_dataset, hue='Proline')

import matplotlib.pyplot as mp
import pandas as pd
import seaborn as sb
dataplot=sb.heatmap(titanic_dataset.corr())

